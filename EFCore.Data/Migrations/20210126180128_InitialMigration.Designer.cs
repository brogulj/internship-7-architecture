// <auto-generated />
using System;
using EFCore.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Data.Migrations
{
    [DbContext(typeof(EFCoreDbContext))]
    [Migration("20210126180128_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CategoryOffer", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("OffersId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "OffersId");

                    b.HasIndex("OffersId");

                    b.ToTable("CategoryOffer");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfSale")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaleType")
                        .HasColumnType("int");

                    b.Property<bool>("Validity")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Building"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Vehicles"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pets"
                        });
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OIB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Marko",
                            LastName = "Markic",
                            OIB = "12345"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mirko",
                            LastName = "Mirkic",
                            OIB = "54321"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Sune",
                            LastName = "Sunic",
                            OIB = "76543"
                        });
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndOfShift")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartOfShift")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = true,
                            EndOfShift = new DateTime(2020, 1, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mate",
                            LastName = "Matic",
                            StartOfShift = new DateTime(2020, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Availability = true,
                            EndOfShift = new DateTime(2020, 1, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ivan",
                            LastName = "Ivanovic",
                            StartOfShift = new DateTime(2020, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Availability = true,
                            EndOfShift = new DateTime(2020, 1, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jovan",
                            LastName = "Jovic",
                            StartOfShift = new DateTime(2020, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AmmountLeft")
                        .HasColumnType("int");

                    b.Property<int>("AmmountSold")
                        .HasColumnType("int");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SaleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmmountLeft = 30,
                            AmmountSold = 0,
                            Availability = true,
                            Name = "Gitara",
                            Price = 500,
                            SaleType = 1
                        },
                        new
                        {
                            Id = 2,
                            AmmountLeft = 1000,
                            AmmountSold = 0,
                            Availability = true,
                            EmployeeId = 1,
                            Name = "Car Wash",
                            Price = 50,
                            SaleType = 0
                        },
                        new
                        {
                            Id = 3,
                            AmmountLeft = 100,
                            AmmountSold = 0,
                            Availability = true,
                            Name = "Dog Food",
                            Price = 10,
                            SaleType = 1
                        },
                        new
                        {
                            Id = 4,
                            AmmountLeft = 50,
                            AmmountSold = 0,
                            Availability = true,
                            Name = "White t-shirt",
                            Price = 30,
                            SaleType = 1
                        },
                        new
                        {
                            Id = 5,
                            AmmountLeft = 10000000,
                            AmmountSold = 0,
                            Availability = true,
                            Name = "Monthly Repairs",
                            Price = 100,
                            SaleType = 2
                        });
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Ammount")
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaleType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Validity")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("OfferId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("CategoryOffer", b =>
                {
                    b.HasOne("EFCore.Data.Entities.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore.Data.Entities.Models.Offer", null)
                        .WithMany()
                        .HasForeignKey("OffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Bill", b =>
                {
                    b.HasOne("EFCore.Data.Entities.Models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Offer", b =>
                {
                    b.HasOne("EFCore.Data.Entities.Models.Employee", "Employee")
                        .WithMany("offers")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Sale", b =>
                {
                    b.HasOne("EFCore.Data.Entities.Models.Bill", "Bill")
                        .WithMany("Sales")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Sales")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Bill", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Customer", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Employee", b =>
                {
                    b.Navigation("offers");
                });

            modelBuilder.Entity("EFCore.Data.Entities.Models.Offer", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
